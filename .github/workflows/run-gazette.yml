name: Build Gridiron Gazette

on:
  workflow_dispatch:
    inputs:
      week:
        description: "Week number (leave blank to use 0/auto)"
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    # Map GitHub Secrets/Variables into the job's environment
    env:
      ESPN_S2: ${{ secrets.ESPN_S2 }}
      SWID: ${{ secrets.SWID }}              # the secret value must look like: {XXXXXXXX-XXXX-...}
      LEAGUE_ID: ${{ vars.LEAGUE_ID }}
      YEAR: ${{ vars.YEAR }}
      TEMPLATE: ${{ vars.TEMPLATE }}
      OUTDOCX: ${{ vars.OUTDOCX }}
      TEAM_LOGOS_FILE: ${{ vars.TEAM_LOGOS_FILE }}   # make sure the file really exists at that path

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight env check (safe)
        run: |
          python - <<'PY'
          import os
          def safe(v):
              if not v: return "missing"
              return f"present(len={len(v)})"
          print("ESPN_S2:", safe(os.getenv("ESPN_S2")))
          print("SWID:", safe(os.getenv("SWID")))
          print("LEAGUE_ID:", os.getenv("LEAGUE_ID"))
          print("YEAR:", os.getenv("YEAR"))
          print("TEMPLATE:", os.getenv("TEMPLATE"))
          print("OUTDOCX:", os.getenv("OUTDOCX"))
          print("TEAM_LOGOS_FILE:", os.getenv("TEAM_LOGOS_FILE"))
          PY

      - name: Build Gazette (Sabre voice on by default)
        run: |
          set -euo pipefail

          # Pull optional input week; default to 0 (auto/week from YAML)
          WEEK_INPUT="${{ inputs.week || '' }}"
          PY_ARGS=()
          if [ -n "$WEEK_INPUT" ]; then
            PY_ARGS+=(--week "$WEEK_INPUT")
          fi

          # Run â€” cookies can be ESPN_S2/SWID (we set env above)
          python build_gazette.py \
            --league "${LEAGUE_ID}" \
            --year "${YEAR}" \
            --template "${TEMPLATE}" \
            --outdocx "${OUTDOCX}" \
            --llm-blurbs \
            --blurb-style sabre \
            --verbose \
            "${PY_ARGS[@]}"

      - name: Upload recap
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: recap-docs
          path: |
            recaps/*.docx
            recaps/*.pdf

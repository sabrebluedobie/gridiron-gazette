name: Build Gazette

on:
  workflow_dispatch:
    inputs:
      out_name:
        description: Output DOCX filename
        required: true
        default: Gazette_Week_auto.docx
      league_id:
        description: ESPN league id
        required: true
        default: "887998"
      year:
        description: Season year
        required: true
        default: "2025"
      week:
        description: Week number or 'auto' for last completed week
        required: true
        default: "auto"
      slots:
        description: Number of matchup slots
        required: true
        default: "6"
      blurbs:
        description: Enable blurbs (true/false)
        required: true
        default: "true"
      blurb_style:
        description: mascot | neutral | hype | coach
        required: true
        default: "mascot"
      blurb_words:
        description: Blurb target words
        required: true
        default: "180"
      temperature:
        description: Blurb temperature
        required: true
        default: "0.4"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip "setuptools<81" wheel
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install docxtpl==0.16.7 python-docx==1.1.2 docxcompose==1.4.0 Jinja2==3.1.4 lxml>=5.3 pillow>=10 espn_api
          fi

      - name: Prepare logos
        run: |
          if [ -f logos/generated_logos.zip ]; then unzip -o logos/generated_logos.zip -d logos; fi
          LEAGUE=""
          for C in logos/generated_logos/BrownSEA_KC.PNG logos/generated-logos/BrownSEA_KC.PNG logos/generated_logos/BrownSEA-KC.PNG logos/generated-logos/BrownSEA-KC.PNG; do
            [ -f "$C" ] && LEAGUE="$C" && break
          done
          SPONSOR=""
          for C in logos/generated_logos/gazette_logo.png logos/generated_logos/gazette_logo.PNG logos/generated-logos/gazette_logo.png logos/generated-logos/gazette_logo.PNG logos/gazette_logo.png logos/gazette_logo.PNG; do
            [ -f "$C" ] && SPONSOR="$C" && break
          done
          echo "LEAGUE_LOGO=$LEAGUE" >> $GITHUB_ENV
          echo "SPONSOR_LOGO=$SPONSOR" >> $GITHUB_ENV

      - name: Build Gazette DOCX
        run: |
          mkdir -p recaps
          python build_gazette.py \
            --template recap_template.docx \
            --out-docx "recaps/${{ inputs.out_name }}" \
            --league-id "${{ inputs.league_id }}" \
            --year "${{ inputs.year }}" \
            --week "${{ inputs.week }}" \
            --slots "${{ inputs.slots }}" \
            $(test "${{ inputs.blurbs }}" = "true" && echo "--blurbs" || echo "--no-blurbs") \
            --blurb-style "${{ inputs.blurb_style }}" \
            --blurb-words "${{ inputs.blurb_words }}" \
            --temperature "${{ inputs.temperature }}" \
            ${LEAGUE_LOGO:+--league-logo "$LEAGUE_LOGO"} \
            ${SPONSOR_LOGO:+--sponsor-logo "$SPONSOR_LOGO"}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.out_name }}
          path: recaps/${{ inputs.out_name }}
